namespace Tetris.Engine.Test.AITests.AlgorithmTests
{
    using NUnit.Framework;

    using Tetris.Engine.AI.Algorithms;
    using Tetris.Engine.Extensions;

    [TestFixture]
    public class FeatureTests : TestBase
    {
        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010
                    0000000000000010", 6)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0100000000000000
                    0100000000000000
                    0100000000000000", 6)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0101000000000000
                    0101000000000000
                    0101000000000000", 12)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0010100000000000
                    0010100000000000
                    0010100000000000", 6)]
        public void WellSums(string input, int expeceted)
        {
            var boolMatrix = input.StringToBoolMatrix(10);
            var features = new Features(boolMatrix);

            Assert.AreEqual(expeceted, features.WellSums());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000011
                    0000000000000010", 1)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0100000000000000
                    1100000000000000
                    0100000000000000", 1)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1111000000000000
                    0101000000000000
                    0101000000000000", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0011100000000000
                    0010100000000000
                    0010100000000000", 2)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0001110000000000
                    0000100000000000", 2)]
        public void NumberOfHoles(string input, int expeceted)
        {
            var boolMatrix = input.StringToBoolMatrix(10);
            var features = new Features(boolMatrix);

            Assert.AreEqual(expeceted, features.NumberOfHoles());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010", 2)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010
                    0000000000000010", 6)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1000000000001010", 5)]
        public void ColumnTransitions(string input, int expeceted)
        {
            var boolMatrix = input.StringToBoolMatrix(10);
            var features = new Features(boolMatrix);

            Assert.AreEqual(expeceted, features.ColumnTransitions());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0010100000000000", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000100000000000
                    0000100000000000", 2)]
        public void RowTransitions(string input, int expeceted)
        {
            var boolMatrix = input.StringToBoolMatrix(10);
            var features = new Features(boolMatrix);

            Assert.AreEqual(expeceted, features.RowTransitions());
        }
    }
}
